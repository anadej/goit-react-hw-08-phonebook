{"version":3,"sources":["components/filter/FilterStyled.js","redux/contacts/contactsSelectors.js","components/filter/Filter.js","components/contactsForm/ContactsFormStyled.js","services/contacts_api.js","components/contactsForm/ContactsForm.js","redux/contacts/contactsOperations.js","components/contactsList/ContactsListStyled.js","components/contactsList/ContactsList.js","components/SectionStyled.js","components/Section.js","pages/ContactPage.js"],"names":["FilterStyled","styled","label","getLoading","state","contacts","isLoading","getFilter","filter","getFilteredContacts","createSelector","items","normalizedFilter","toLowerCase","contact","name","includes","connect","setFilter","className","type","value","pattern","title","required","onChange","e","inputFilter","target","ContactsFormStyled","div","baseURL","getContacts","a","axios","get","response","res","Object","keys","data","map","item","id","Error","addContact","post","deleteContact","delete","groupContacts","initialState","number","group","ContactsForm","onHandleChange","setState","onHandleSubmit","preventDefault","props","addContactOperation","this","getContactsOperation","onSubmit","toUpperCase","Component","user","dispatch","getState","addContactsRequest","addContactsSuccess","addContactsError","message","getContactsRequest","getContactsSuccess","getContactsError","ContactsListStyled","deleteContactOperation","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","onClick","SectionStyled","section","Section","children","ContactPage"],"mappings":"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","file":"static/js/5.71745d30.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FilterStyled = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 20px;\r\n\r\n  .inputFilter {\r\n    width: 150px;\r\n    margin-top: 5px;\r\n\r\n    &:focus {\r\n      outline: none;\r\n      border: 2px solid lightblue;\r\n    }\r\n  }\r\n`;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getLoading = (state) => state.contacts.isLoading;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getAllContacts = (state) => state.contacts.items;\r\n\r\n// const getFilteredContacts = state => state.contacts.items.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n\r\n// export const getFilteredContacts = (state) => {\r\n//   const contacts = getAllContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return contacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// };\r\n\r\n//мемоизация селектора\r\nexport const getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/contacts/contactsAction\";\r\nimport { FilterStyled } from \"./FilterStyled\";\r\nimport { getFilter } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst Filter = ({ filter, setFilter }) => {\r\n  const onFilterChange = (e) => {\r\n    const inputFilter = e.target.value;\r\n    setFilter(inputFilter);\r\n  };\r\n  return (\r\n    <FilterStyled>\r\n      Find contacts by name:\r\n      <input\r\n        className=\"inputFilter\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Начните вводить имя контакта, который хотите найти\"\r\n        required\r\n        onChange={onFilterChange}\r\n      />\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: getFilter(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setFilter })(Filter);\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsFormStyled = styled.div`\r\n  border: 2px solid black;\r\n  width: 40%;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n\r\n  .phoneForm {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .labelForm {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 10px;\r\n  }\r\n  .inputForm {\r\n    width: 150px;\r\n    margin-top: 5px;\r\n  }\r\n  .buttonForm {\r\n    width: 40%;\r\n    background-color: white;\r\n    border-radius: 5px;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = \"https://phonebook-d66d1-default-rtdb.firebaseio.com\";\r\n\r\nexport const getContacts = async () => {\r\n  try {\r\n    const response = await axios.get(baseURL + \"/contacts.json\");\r\n    const res = Object.keys(response.data).map((item) => ({\r\n      id: item,\r\n      ...response.data[item],\r\n    }));\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const addContact = async (contact) => {\r\n  try {\r\n    const response = await axios.post(baseURL + \"/contacts.json\", contact);\r\n    return { ...contact, id: response.data.name };\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const deleteContact = async (id) => {\r\n  try {\r\n    await axios.delete(baseURL + `/contacts/${id}.json`);\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ContactsFormStyled } from \"./ContactsFormStyled\";\r\nimport {\r\n  addContactOperation,\r\n  getContactsOperation,\r\n} from \"../../redux/contacts/contactsOperations\";\r\nimport { getLoading } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst groupContacts = [\"all\", \"family\", \"friends\", \"work\"];\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n  group: groupContacts[0],\r\n};\r\n\r\nclass ContactsForm extends Component {\r\n  state = { ...initialState };\r\n\r\n  componentDidMount() {\r\n    this.props.getContactsOperation();\r\n  }\r\n\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.props.addContactOperation({ ...this.state });\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <ContactsFormStyled>\r\n        {this.props.isLoading && <p>...loading</p>}\r\n        <form className=\"phoneForm\" onSubmit={this.onHandleSubmit}>\r\n          <label className=\"labelForm\">\r\n            Name:\r\n            <input\r\n              className=\"inputForm\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <label className=\"labelForm\">\r\n            Number:\r\n            <input\r\n              className=\"inputForm\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <label className=\"labelForm\">\r\n            Group:\r\n            <select\r\n              name=\"group\"\r\n              className=\"inputForm\"\r\n              onChange={this.onHandleChange}\r\n            >\r\n              {groupContacts.map((item) => (\r\n                <option value={item} key={item}>\r\n                  {item.toUpperCase()}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <button type=\"submit\" className=\"buttonForm\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </ContactsFormStyled>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isLoading: getLoading(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addContactOperation,\r\n  getContactsOperation,\r\n})(ContactsForm);\r\n","import {\r\n  addContact,\r\n  deleteContact,\r\n  getContacts,\r\n} from \"../../services/contacts_api\";\r\n\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n} from \"./contactsAction\";\r\n\r\nexport const getContactsOperation = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(getContactsRequest());\r\n    const res = await getContacts();\r\n    dispatch(getContactsSuccess(res));\r\n  } catch (error) {\r\n    dispatch(getContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContactOperation = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(addContactsRequest());\r\n    //запрос к backend на добавление одного контакта, возвращает id\r\n    const res = await addContact(user);\r\n    //обоновляем state c id контакта, полученного из базы\r\n    dispatch(addContactsSuccess({ ...res }));\r\n  } catch (error) {\r\n    dispatch(addContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const deleteContactOperation = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(deleteContactsRequest());\r\n    await deleteContact(id);\r\n    dispatch(deleteContactsSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactsError(error.message));\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsListStyled = styled.div`\r\n  .contactBtn {\r\n    background-color: white;\r\n    border-radius: 5px;\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ContactsListStyled } from \"./ContactsListStyled\";\r\nimport { deleteContactOperation } from \"../../redux/contacts/contactsOperations\";\r\nimport { getFilteredContacts } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst ContactsList = ({ contacts, deleteContactOperation }) => {\r\n  return (\r\n    <ContactsListStyled>\r\n      <ul>\r\n        {contacts.map((contact) => (\r\n          <li key={contact.id}>\r\n            {contact.name}: {contact.number}\r\n            <button\r\n              className=\"contactBtn\"\r\n              type=\"button\"\r\n              onClick={() => deleteContactOperation(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </ContactsListStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    //в state передаем сразу отфильтрованные массив номеров, по актуальному значению поля filtr\r\n    contacts: getFilteredContacts(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteContactOperation })(\r\n  ContactsList\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionStyled = styled.section`\r\n  .sectionTitle {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SectionStyled } from \"./SectionStyled\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"sectionTitle\">{title}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport Filter from \"../components/filter/Filter\";\r\nimport ContactsForm from \"../components/contactsForm/ContactsForm\";\r\nimport ContactsList from \"../components/contactsList/ContactsList\";\r\nimport Section from \"../components/Section\";\r\n\r\nconst ContactPage = () => {\r\n  return (\r\n    <>\r\n      <Section title={\"Add new contact:\"}>\r\n        <ContactsForm />\r\n      </Section>\r\n      <Section title={\"List of contacts:\"}>\r\n        <Filter />\r\n        <ContactsList />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n"],"sourceRoot":""}