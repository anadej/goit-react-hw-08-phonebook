{"version":3,"sources":["services/auth_api.js","components/auth/AuthStyled.js","components/auth/Auth.js","redux/auth/authOperations.js","pages/AuthPage.js","icons/project_sprites.svg"],"names":["API_KEY","register_URL","login_URL","registerUser","user","a","axios","post","returnSecureToken","res","baseURL","email","addUserToDB","registerData","data","id","name","loginUser","loginData","AuthContainer","styled","div","Auth","state","password","displayName","isRegisterPage","props","location","pathname","onHandleChange","e","target","value","setState","onHandleSubmit","preventDefault","registerUserOperation","loginUserOperation","prevProps","prevState","error","this","console","log","alert","onSubmit","className","autoComplete","type","onChange","placeholder","minLength","required","href","sprite","Component","connect","auth","errorAuth","dispatch","registerUserRequest","registerUserSuccess","registerUserError","message","loginUserRequest","loginUserSuccess","loginUserError","withRouter","AuthPage"],"mappings":"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","file":"static/js/1.513b975e.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst API_KEY = \"AIzaSyDZKNiswL8RQXzhTtbuSF2zZEn4tMwubTI\";\r\nconst register_URL = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`;\r\nconst login_URL = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`;\r\nconst baseURL = \"https://phonebook-d66d1-default-rtdb.firebaseio.com\";\r\n\r\nexport const registerUser = async (user) => {\r\n  try {\r\n    const res = await axios.post(register_URL, {\r\n      ...user,\r\n      returnSecureToken: true,\r\n    });\r\n    const addUserToDB = await axios.post(baseURL + \"/users.json\", {\r\n      email: user.email,\r\n    });\r\n    return {\r\n      registerData: res.data,\r\n      id: addUserToDB.data.name,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const loginUser = async (user) => {\r\n  try {\r\n    const res = await axios.post(login_URL, {\r\n      ...user,\r\n      returnSecureToken: true,\r\n    });\r\n    return { loginData: res.data };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const AuthContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 20px 0;\r\n  color: darkblue;\r\n\r\n  .user-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 280px;\r\n    padding: 10px;\r\n    border: 1px solid lightgray;\r\n    border-radius: 16px;\r\n  }\r\n  .user-form-title {\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-weight: 700;\r\n  }\r\n  .user-form-label {\r\n    position: relative;\r\n    margin-bottom: 8px;\r\n    padding-top: 8px;\r\n  }\r\n  .user-form-input {\r\n    height: 30px;\r\n    width: 100%;\r\n    padding-left: 8px;\r\n    margin: 10px 0;\r\n    outline: none;\r\n    border: 1px solid cornflowerblue;\r\n    border-radius: 14px;\r\n  }\r\n  .user-form-input:focus + .icon-user,\r\n  .user-form-input:not(:placeholder-shown) + .icon-user {\r\n    opacity: 0;\r\n  }\r\n  .user-form-input:not(:placeholder-shown)::placeholder {\r\n    opacity: 0;\r\n  }\r\n  .user-form-input:focus::placeholder {\r\n    opacity: 0;\r\n  }\r\n  .user-form-input::placeholder {\r\n    color: cornflowerblue;\r\n    padding-left: 25px;\r\n    font-size: 14px;\r\n    transition: opacity 300ms linear;\r\n  }\r\n  .icon-user {\r\n    position: absolute;\r\n    bottom: 20px;\r\n    left: 16px;\r\n    width: 12px;\r\n    height: 12px;\r\n    fill: cornflowerblue;\r\n    transition: opacity 300ms linear;\r\n  }\r\n  .user-form-button {\r\n    align-self: center;\r\n    width: 120px;\r\n    height: 24px;\r\n    background-color: cornflowerblue;\r\n    border: none;\r\n    border-radius: 14px;\r\n    color: white;\r\n    text-transform: uppercase;\r\n    padding: 0 20px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  registerUserOperation,\r\n  loginUserOperation,\r\n} from \"../../redux/auth/authOperations\";\r\nimport { AuthContainer } from \"./AuthStyled\";\r\nimport sprite from \"../../icons/project_sprites.svg\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    displayName: \"\",\r\n  };\r\n\r\n  isRegisterPage = () => this.props.location.pathname === \"/register\";\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.error !== this.props.error) {\r\n      console.log(this.props.error);\r\n      if (this.props.error === \"Request failed with status code 400\") {\r\n        alert(\"User not found! Input correct login data.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.isRegisterPage()\r\n      ? this.props.registerUserOperation(this.state)\r\n      : this.props.loginUserOperation(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { pathname } = this.props.location;\r\n    const { email, password, displayName } = this.state;\r\n    return (\r\n      <AuthContainer>\r\n        <form\r\n          onSubmit={this.onHandleSubmit}\r\n          className=\"user-form\"\r\n          autoComplete=\"off\"\r\n          name=\"userForm\"\r\n        >\r\n          {/* {pathname === \"/register\" ? (\r\n            <p className=\"user-form-title\">Register</p>\r\n          ) : (\r\n            <p className=\"user-form-title\">Login</p>\r\n          )} */}\r\n          {this.isRegisterPage() && (\r\n            <label className=\"user-form-label\">\r\n              Name\r\n              <input\r\n                type=\"text\"\r\n                name=\"displayName\"\r\n                onChange={this.onHandleChange}\r\n                value={displayName}\r\n                className=\"user-form-input\"\r\n                placeholder=\"Jony English\"\r\n                minLength=\"3\"\r\n                autoComplete=\"on\"\r\n                required\r\n              />\r\n              <svg className=\"icon-user\">\r\n                <use href={sprite + \"#icon-user\"} />\r\n              </svg>\r\n            </label>\r\n          )}\r\n          <label className=\"user-form-label\">\r\n            Email\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              onChange={this.onHandleChange}\r\n              value={email}\r\n              className=\"user-form-input\"\r\n              placeholder=\"jony@gmail.com\"\r\n              minLength=\"3\"\r\n              autoComplete=\"on\"\r\n              required\r\n            />\r\n            <svg className=\"icon-user\">\r\n              <use href={sprite + \"#icon-drawer\"} />\r\n            </svg>\r\n          </label>\r\n          <label className=\"user-form-label\">\r\n            Password\r\n            <input\r\n              type=\"text\"\r\n              name=\"password\"\r\n              onChange={this.onHandleChange}\r\n              value={password}\r\n              className=\"user-form-input\"\r\n              placeholder=\"Qwerty123\"\r\n              autoComplete=\"on\"\r\n              required\r\n            />\r\n            <svg className=\"icon-user\">\r\n              <use href={sprite + \"#icon-user\"} />\r\n            </svg>\r\n          </label>\r\n          <button type=\"submit\" className=\"user-form-button\">\r\n            {pathname === \"/register\" ? \"Register\" : \"Login\"}\r\n          </button>\r\n        </form>\r\n      </AuthContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.auth.errorAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  registerUserOperation,\r\n  loginUserOperation,\r\n})(withRouter(Auth));\r\n","import { loginUser, registerUser } from \"../../services/auth_api\";\r\nimport {\r\n  registerUserRequest,\r\n  registerUserSuccess,\r\n  registerUserError,\r\n  loginUserRequest,\r\n  loginUserSuccess,\r\n  loginUserError,\r\n} from \"./authAction\";\r\n\r\nconst registerUserOperation = (user) => async (dispatch) => {\r\n  try {\r\n    dispatch(registerUserRequest());\r\n    const res = await registerUser(user);\r\n    dispatch(registerUserSuccess(res.registerData));\r\n  } catch (error) {\r\n    dispatch(registerUserError(error.message));\r\n  }\r\n};\r\n\r\nconst loginUserOperation = (user) => async (dispatch) => {\r\n  try {\r\n    dispatch(loginUserRequest());\r\n    const res = await loginUser(user);\r\n    dispatch(loginUserSuccess(res.loginData));\r\n  } catch (error) {\r\n    dispatch(loginUserError(error.message));\r\n  }\r\n};\r\n\r\nexport { registerUserOperation, loginUserOperation };\r\n","import React from \"react\";\r\nimport Auth from \"../components/auth/Auth\";\r\n\r\nconst AuthPage = () => {\r\n  return (\r\n    <>\r\n      <Auth />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","export default __webpack_public_path__ + \"static/media/project_sprites.399ae2ea.svg\";"],"sourceRoot":""}