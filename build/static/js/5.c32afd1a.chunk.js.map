{"version":3,"sources":["../node_modules/classnames/index.js","components/filter/FilterStyled.js","redux/contacts/contactsSelectors.js","components/filter/Filter.js","components/contactsForm/ContactsFormStyled.js","services/contacts_api.js","components/contactsForm/ContactsForm.js","redux/contacts/contactsOperations.js","components/contactsList/ContactsListStyled.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/react-bootstrap/esm/Table.js","components/contactsList/ContactsList.js","components/SectionStyled.js","components/Section.js","pages/ContactPageStyled.js","pages/ContactPage.js","icons/project_sprites.svg"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","FilterStyled","styled","label","getLoading","state","contacts","isLoading","getFilter","filter","getAllContacts","items","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","connect","setFilter","className","type","value","pattern","title","required","onChange","e","inputFilter","target","ContactsFormStyled","div","baseURL","getContacts","a","axios","get","response","res","keys","data","map","item","id","Error","addContact","post","deleteContact","delete","groupContacts","initialState","number","group","ContactsForm","onHandleChange","setState","onHandleSubmit","preventDefault","props","allContacts","some","alert","addContactOperation","this","getContactsOperation","onSubmit","href","sprite","toUpperCase","Component","user","dispatch","getState","addContactsRequest","addContactsSuccess","addContactsError","message","getContactsRequest","getContactsSuccess","getContactsError","ContactsListStyled","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ThemeContext","React","prefixes","Consumer","Provider","useBootstrapPrefix","prefix","defaultPrefix","useContext","ThemeProvider","Table","ref","bsPrefix","striped","bordered","borderless","hover","size","variant","responsive","decoratedBsPrefix","table","_jsx","responsiveClass","children","deleteContactOperation","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","onClick","SectionStyled","section","Section","ContactPageContainer","color","height","width"],"mappings":";2GAAA,OAOC,WACA,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,SAGT,GAAgB,WAAZJ,EACV,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACrC,IAAK,IAAIG,KAAOV,EACXP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAChCd,EAAQM,KAAKQ,QAIfd,EAAQM,KAAKF,EAAIO,aAKpB,OAAOX,EAAQgB,KAAK,KAGgBC,EAAOC,SAC3CnB,EAAWoB,QAAUpB,EACrBkB,EAAOC,QAAUnB,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aA5CP,I,wFCLYqB,EAAeC,IAAOC,MAAV,qb,QCAZC,EAAa,SAACC,GAAD,OAAWA,EAAMC,SAASC,WAEvCC,EAAY,SAACH,GAAD,OAAWA,EAAMC,SAASG,QAEtCC,EAAiB,SAACL,GAAD,OAAWA,EAAMC,SAASK,OAe3CC,EAAsBC,YACjC,CAACH,EAAgBF,IACjB,SAACF,EAAUG,GACT,IAAMK,EAAmBL,EAAOM,cAChC,OAAOT,EAASG,QAAO,SAACO,GAAD,OACrBA,EAAQC,KAAKF,cAAcG,SAASJ,S,OCQ3BK,eANS,SAACd,GACvB,MAAO,CACLI,OAAQD,EAAUH,MAIkB,CAAEe,eAA3BD,EA5BA,SAAC,GAA2B,IAAzBV,EAAwB,EAAxBA,OAAQW,EAAgB,EAAhBA,UAKxB,OACE,eAACnB,EAAD,oCAEE,uBACEoB,UAAU,cACVC,KAAK,OACLL,KAAK,SACLM,MAAOd,EACPe,QAAQ,yHACRC,MAAM,4QACNC,UAAQ,EACRC,SAfiB,SAACC,GACtB,IAAMC,EAAcD,EAAEE,OAAOP,MAC7BH,EAAUS,Y,wECPDE,EAAqB7B,IAAO8B,IAAV,yzC,iBCAzBC,EAAU,sDAEHC,EAAW,uCAAG,8BAAAC,EAAA,+EAEAC,IAAMC,IAAIJ,EAAU,kBAFpB,cAEjBK,EAFiB,OAGjBC,EAAM9C,OAAO+C,KAAKF,EAASG,MAAMC,KAAI,SAACC,GAAD,oBACzCC,GAAID,GACDL,EAASG,KAAKE,OALI,kBAOhBJ,GAPgB,sCASjB,IAAIM,MAAJ,MATiB,yDAAH,qDAaXC,EAAU,uCAAG,WAAO9B,GAAP,eAAAmB,EAAA,+EAECC,IAAMW,KAAKd,EAAU,iBAAkBjB,GAFxC,cAEhBsB,EAFgB,oDAGVtB,GAHU,IAGD4B,GAAIN,EAASG,KAAKxB,QAHjB,sCAKhB,IAAI4B,MAAJ,MALgB,yDAAH,sDASVG,EAAa,uCAAG,WAAOJ,GAAP,SAAAT,EAAA,+EAEnBC,IAAMa,OAAOhB,EAAO,oBAAgBW,EAAhB,UAFD,4DAInB,IAAIC,MAAJ,MAJmB,wDAAH,sD,QChBpBK,EAAgB,CAAC,MAAO,SAAU,UAAW,QAE7CC,EAAe,CACnBlC,KAAM,GACNmC,OAAQ,GACRC,MAAOH,EAAc,IAGjBI,E,4MACJjD,M,eAAa8C,G,EAMbI,eAAiB,SAAC3B,GAChB,MAAwBA,EAAEE,OAAlBb,EAAR,EAAQA,KAAMM,EAAd,EAAcA,MACd,EAAKiC,SAAL,eAAiBvC,EAAOM,K,EAG1BkC,e,uCAAiB,WAAO7B,GAAP,SAAAO,EAAA,yDACfP,EAAE8B,kBAEA,EAAKC,MAAMC,YAAYC,MACrB,SAAClB,GAAD,OAAUA,EAAK1B,KAAKF,gBAAkB,EAAKV,MAAMY,KAAKF,iBAJ3C,uBAOb+C,MAAM,EAAKzD,MAAMY,KAAO,+BAPX,kBAQN,EAAKZ,OARC,OAUf,EAAKsD,MAAMI,oBAAX,eAAoC,EAAK1D,QACzC,EAAKmD,SAAL,eAAmBL,IAXJ,2C,6GATjB,WACEa,KAAKL,MAAMM,yB,oBAsBb,WACE,MAAyBD,KAAK3D,MAAtBY,EAAR,EAAQA,KAAMmC,EAAd,EAAcA,OACd,OACE,cAACrB,EAAD,UACE,uBAAMV,UAAU,YAAY6C,SAAUF,KAAKP,eAA3C,UACE,wBAAOpC,UAAU,YAAjB,kBAEE,uBACEA,UAAU,YACVC,KAAK,OACLL,KAAK,OACLM,MAAON,EACPO,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUqC,KAAKT,iBAEjB,qBAAKlC,UAAU,YAAf,SACE,qBAAK8C,KAAMC,IAAS,oBAGxB,wBAAO/C,UAAU,YAAjB,oBAEE,uBACEA,UAAU,YACVC,KAAK,MACLL,KAAK,SACLM,MAAO6B,EACP5B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUqC,KAAKT,iBAEjB,qBAAKlC,UAAU,YAAf,SACE,qBAAK8C,KAAMC,IAAS,qBAGxB,wBAAO/C,UAAU,YAAjB,mBAEE,wBACEJ,KAAK,QACLI,UAAU,YACVM,SAAUqC,KAAKT,eAHjB,SAKGL,EAAcR,KAAI,SAACC,GAAD,OACjB,wBAAQpB,MAAOoB,EAAf,SACGA,EAAK0B,eADkB1B,WAMhC,wBAAQrB,KAAK,SAASD,UAAU,aAAhC,kC,GA7EiBiD,aA4FZnD,eANS,SAACd,GACvB,MAAO,CACLuD,YAAalD,EAAeL,MAIQ,CACtC0D,oBCnFiC,SAACQ,GAAD,8CAAU,WAAOC,EAAUC,GAAjB,eAAAtC,EAAA,sEAEzCqC,EAASE,eAFgC,SAIvB5B,EAAWyB,GAJY,OAInChC,EAJmC,OAMzCiC,EAASG,YAAmB,eAAKpC,KANQ,gDAQzCiC,EAASI,YAAiB,KAAMC,UARS,yDAAV,yDDoFjCZ,qBC9FkC,yDAAM,WAAOO,EAAUC,GAAjB,eAAAtC,EAAA,sEAEtCqC,EAASM,eAF6B,SAGpB5C,IAHoB,OAGhCK,EAHgC,OAItCiC,EAASO,YAAmBxC,IAJU,gDAMtCiC,EAASQ,YAAiB,KAAMH,UANM,yDAAN,0DD4FrB1D,CAGZmC,GE/GU2B,EAAqB/E,IAAO8B,IAAV,goBCDhB,SAASkD,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIxF,EAAKb,EADLgD,ECHS,SAAuCqD,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIxF,EAAKb,EAFLgD,EAAS,GACTuD,EAAa5F,OAAO+C,KAAK2C,GAG7B,IAAKrG,EAAI,EAAGA,EAAIuG,EAAWrG,OAAQF,IACjCa,EAAM0F,EAAWvG,GACbsG,EAASE,QAAQ3F,IAAQ,IAC7BmC,EAAOnC,GAAOwF,EAAOxF,IAGvB,OAAOmC,EDTM,CAA6BqD,EAAQC,GAGlD,GAAI3F,OAAO8F,sBAAuB,CAChC,IAAIC,EAAmB/F,OAAO8F,sBAAsBJ,GAEpD,IAAKrG,EAAI,EAAGA,EAAI0G,EAAiBxG,OAAQF,IACvCa,EAAM6F,EAAiB1G,GACnBsG,EAASE,QAAQ3F,IAAQ,GACxBF,OAAOC,UAAU+F,qBAAqB7F,KAAKuF,EAAQxF,KACxDmC,EAAOnC,GAAOwF,EAAOxF,IAIzB,OAAOmC,E,sBEdH4D,EAA4BC,gBAAoB,CACpDC,SAAU,KAKRF,EAFFG,SAEEH,EADFI,SAmBK,SAASC,EAAmBC,EAAQC,GACzC,IACEL,EACEM,qBAAWR,GADbE,SAEF,OAAOI,GAAUJ,EAASK,IAAkBA,EAgC/BE,I,uGCxBAC,EAnCYT,cAAiB,WAWzCU,GAAQ,IAVTC,EAUS,EAVTA,SACAjF,EASS,EATTA,UACAkF,EAQS,EARTA,QACAC,EAOS,EAPTA,SACAC,EAMS,EANTA,WACAC,EAKS,EALTA,MACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,QACAC,EAES,EAFTA,WACGlD,EACM,OACHmD,EAAoBf,EAAmBO,EAAU,SACjDzH,EAAUD,IAAWyC,EAAWyF,EAAmBF,GAAW,GAAJ,OAAOE,EAAP,YAA4BF,GAAWD,GAAQ,GAAJ,OAAOG,EAAP,YAA4BH,GAAQJ,GAAW,GAAJ,OAAOO,EAAP,YAAoCN,GAAY,GAAJ,OAAOM,EAAP,aAAqCL,GAAc,GAAJ,OAAOK,EAAP,eAAuCJ,GAAS,GAAJ,OAAOI,EAAP,WAEvRC,EAAqBC,cAAK,QAAD,YAAC,eAAcrD,GAAf,IAC7BtC,UAAWxC,EACXwH,IAAKA,KAGP,GAAIQ,EAAY,CACd,IAAII,EAAkB,GAAH,OAAMH,EAAN,eAMnB,MAJ0B,kBAAfD,IACTI,EAAkB,GAAH,OAAMA,EAAN,YAAyBJ,IAGtBG,cAAK,MAAO,CAC9B3F,UAAW4F,EACXC,SAAUH,IAId,OAAOA,KC+BM5F,eAPS,SAACd,GACvB,MAAO,CAELC,SAAUM,EAAoBP,MAIM,CAAE8G,uBN5BJ,SAACvE,GAAD,8CAAQ,WAAO4B,EAAUC,GAAjB,SAAAtC,EAAA,sEAE1CqC,EAAS4C,eAFiC,SAGpCpE,EAAcJ,GAHsB,OAI1C4B,EAAS6C,YAAsBzE,IAJW,gDAM1C4B,EAAS8C,YAAoB,KAAMzC,UANO,yDAAR,0DM4BvB1D,EA5DM,SAAC,GAA0C,IAAxCb,EAAuC,EAAvCA,SAAU6G,EAA6B,EAA7BA,uBAC5BrI,EAAI,EACR,OACE,cAACmG,EAAD,UACE,eAAC,EAAD,CAAOuB,UAAQ,EAACD,SAAO,EAACG,OAAK,EAACC,KAAK,KAAnC,UACE,gCACE,+BACE,mCACA,sCACA,uCACA,4BAGJ,gCACGrG,EAASoC,KAAI,SAAC1B,GAAD,OACZ,+BACE,+BAAOlC,IACP,6BAAKkC,EAAQC,OACb,6BAAKD,EAAQoC,SACb,6BACE,wBACE/B,UAAU,mBACVC,KAAK,SACLiG,QAAS,kBAAMJ,EAAuBnG,EAAQ4B,KAHhD,SAKE,qBAAKvB,UAAU,YAAf,SACE,qBAAK8C,KAAMC,IAAS,sBAXnBpD,EAAQ4B,iBCrBhB4E,EAAgBtH,IAAOuH,QAAV,gRCUXC,EATC,SAAC,GAAyB,IAAvBjG,EAAsB,EAAtBA,MAAOyF,EAAe,EAAfA,SACxB,OACE,eAACM,EAAD,WACE,oBAAInG,UAAU,eAAd,SAA8BI,IAC7ByF,M,kBCLMS,GAAuBzH,IAAO8B,IAAV,4GCkClBb,uBANS,SAACd,GACvB,MAAO,CACLE,UAAWH,EAAWC,MAIXc,EAzBK,SAAC,GAAmB,IAAjBZ,EAAgB,EAAhBA,UACrB,OACE,eAACoH,GAAD,WACGpH,GACC,qBAAKc,UAAU,SAAf,SACE,cAAC,KAAD,CAAQC,KAAK,YAAYsG,MAAM,WAAWC,OAAQ,GAAIC,MAAO,OAGjE,cAAC,EAAD,CAASrG,MAAO,kBAAhB,SACE,cAAC,EAAD,MAEF,eAAC,EAAD,CAASA,MAAO,mBAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,c,gCCxBO,QAA0B","file":"static/js/5.c32afd1a.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import styled from \"styled-components\";\r\n\r\nexport const FilterStyled = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 280px;\r\n  padding: 10px;\r\n  border: 1px solid lightgray;\r\n  border-radius: 16px;\r\n\r\n  .inputFilter {\r\n    height: 30px;\r\n    width: 100%;\r\n    padding-left: 8px;\r\n    margin: 5px 0;\r\n    outline: none;\r\n    border: 1px solid cornflowerblue;\r\n    border-radius: 14px;\r\n\r\n    &:focus {\r\n      outline: none;\r\n      border: 2px solid lightblue;\r\n    }\r\n  }\r\n`;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getLoading = (state) => state.contacts.isLoading;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getAllContacts = (state) => state.contacts.items;\r\n\r\n// const getFilteredContacts = state => state.contacts.items.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n\r\n// export const getFilteredContacts = (state) => {\r\n//   const contacts = getAllContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return contacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// };\r\n\r\n//мемоизация селектора\r\nexport const getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/contacts/contactsAction\";\r\nimport { FilterStyled } from \"./FilterStyled\";\r\nimport { getFilter } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst Filter = ({ filter, setFilter }) => {\r\n  const onFilterChange = (e) => {\r\n    const inputFilter = e.target.value;\r\n    setFilter(inputFilter);\r\n  };\r\n  return (\r\n    <FilterStyled>\r\n      Find contacts by name:\r\n      <input\r\n        className=\"inputFilter\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Начните вводить имя контакта, который хотите найти\"\r\n        required\r\n        onChange={onFilterChange}\r\n      />\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: getFilter(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setFilter })(Filter);\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsFormStyled = styled.div`\r\n  .phoneForm {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 280px;\r\n    padding: 10px;\r\n    border: 1px solid lightgray;\r\n    border-radius: 16px;\r\n  }\r\n  .labelForm {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n  }\r\n  .inputForm {\r\n    height: 30px;\r\n    width: 100%;\r\n    padding-left: 8px;\r\n    margin: 5px 0;\r\n    outline: none;\r\n    border: 1px solid cornflowerblue;\r\n    border-radius: 14px;\r\n  }\r\n  .inputForm:focus + .icon-user,\r\n  .inputForm:not(:placeholder-shown) + .icon-user {\r\n    opacity: 0;\r\n  }\r\n  .inputForm:not(:placeholder-shown)::placeholder {\r\n    opacity: 0;\r\n  }\r\n  .inputForm:focus::placeholder {\r\n    opacity: 0;\r\n  }\r\n  .inputForm::placeholder {\r\n    color: cornflowerblue;\r\n    padding-left: 25px;\r\n    font-size: 14px;\r\n    transition: opacity 300ms linear;\r\n  }\r\n  .icon-user {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 12px;\r\n    height: 12px;\r\n    fill: cornflowerblue;\r\n    transition: opacity 300ms linear;\r\n  }\r\n  .buttonForm {\r\n    align-self: center;\r\n    width: 140px;\r\n    height: 24px;\r\n    background-color: cornflowerblue;\r\n    border: none;\r\n    border-radius: 14px;\r\n    color: white;\r\n    text-transform: uppercase;\r\n    padding: 0 20px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = \"https://phonebook-d66d1-default-rtdb.firebaseio.com\";\r\n\r\nexport const getContacts = async () => {\r\n  try {\r\n    const response = await axios.get(baseURL + \"/contacts.json\");\r\n    const res = Object.keys(response.data).map((item) => ({\r\n      id: item,\r\n      ...response.data[item],\r\n    }));\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const addContact = async (contact) => {\r\n  try {\r\n    const response = await axios.post(baseURL + \"/contacts.json\", contact);\r\n    return { ...contact, id: response.data.name };\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const deleteContact = async (id) => {\r\n  try {\r\n    await axios.delete(baseURL + `/contacts/${id}.json`);\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ContactsFormStyled } from \"./ContactsFormStyled\";\r\nimport {\r\n  addContactOperation,\r\n  getContactsOperation,\r\n} from \"../../redux/contacts/contactsOperations\";\r\nimport sprite from \"../../icons/project_sprites.svg\";\r\nimport { getAllContacts } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst groupContacts = [\"all\", \"family\", \"friends\", \"work\"];\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n  group: groupContacts[0],\r\n};\r\n\r\nclass ContactsForm extends Component {\r\n  state = { ...initialState };\r\n\r\n  componentDidMount() {\r\n    this.props.getContactsOperation();\r\n  }\r\n\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      this.props.allContacts.some(\r\n        (item) => item.name.toLowerCase() === this.state.name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(this.state.name + \" is already in contact list\");\r\n      return this.state;\r\n    }\r\n    this.props.addContactOperation({ ...this.state });\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <ContactsFormStyled>\r\n        <form className=\"phoneForm\" onSubmit={this.onHandleSubmit}>\r\n          <label className=\"labelForm\">\r\n            Name:\r\n            <input\r\n              className=\"inputForm\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.onHandleChange}\r\n            />\r\n            <svg className=\"icon-user\">\r\n              <use href={sprite + \"#icon-user\"} />\r\n            </svg>\r\n          </label>\r\n          <label className=\"labelForm\">\r\n            Number:\r\n            <input\r\n              className=\"inputForm\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.onHandleChange}\r\n            />\r\n            <svg className=\"icon-user\">\r\n              <use href={sprite + \"#icon-phone\"} />\r\n            </svg>\r\n          </label>\r\n          <label className=\"labelForm\">\r\n            Group:\r\n            <select\r\n              name=\"group\"\r\n              className=\"inputForm\"\r\n              onChange={this.onHandleChange}\r\n            >\r\n              {groupContacts.map((item) => (\r\n                <option value={item} key={item}>\r\n                  {item.toUpperCase()}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <button type=\"submit\" className=\"buttonForm\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </ContactsFormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allContacts: getAllContacts(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  addContactOperation,\r\n  getContactsOperation,\r\n})(ContactsForm);\r\n","import {\r\n  addContact,\r\n  deleteContact,\r\n  getContacts,\r\n} from \"../../services/contacts_api\";\r\n\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n} from \"./contactsAction\";\r\n\r\nexport const getContactsOperation = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(getContactsRequest());\r\n    const res = await getContacts();\r\n    dispatch(getContactsSuccess(res));\r\n  } catch (error) {\r\n    dispatch(getContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContactOperation = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(addContactsRequest());\r\n    //запрос к backend на добавление одного контакта, возвращает id\r\n    const res = await addContact(user);\r\n    //обоновляем state c id контакта, полученного из базы\r\n    dispatch(addContactsSuccess({ ...res }));\r\n  } catch (error) {\r\n    dispatch(addContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const deleteContactOperation = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(deleteContactsRequest());\r\n    await deleteContact(id);\r\n    dispatch(deleteContactsSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactsError(error.message));\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsListStyled = styled.div`\r\n  margin-top: 20px;\r\n  width: 320px;\r\n  table,\r\n  th,\r\n  td {\r\n    color: darkblue;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .contactDeleteBtn {\r\n    position: relative;\r\n    width: 24px;\r\n    height: 24px;\r\n    background-color: cornflowerblue;\r\n    border: none;\r\n    border-radius: 14px;\r\n    color: white;\r\n    text-transform: uppercase;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n  }\r\n  .icon-user {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin: -6px 0 0 -6px;\r\n    width: 12px;\r\n    height: 12px;\r\n    fill: white;\r\n    transition: opacity 300ms linear;\r\n  }\r\n`;\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {}\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\n\nfunction ThemeProvider({\n  prefixes = {},\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: { ...prefixes\n    },\n    dir\n  }), [prefixes, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({ ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, { ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ContactsListStyled } from \"./ContactsListStyled\";\r\nimport { deleteContactOperation } from \"../../redux/contacts/contactsOperations\";\r\nimport { getFilteredContacts } from \"../../redux/contacts/contactsSelectors\";\r\nimport sprite from \"../../icons/project_sprites.svg\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nconst ContactsList = ({ contacts, deleteContactOperation }) => {\r\n  let i = 0;\r\n  return (\r\n    <ContactsListStyled>\r\n      <Table bordered striped hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Phone</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {contacts.map((contact) => (\r\n            <tr key={contact.id}>\r\n              <td>{++i}</td>\r\n              <td>{contact.name}</td>\r\n              <td>{contact.number}</td>\r\n              <td>\r\n                <button\r\n                  className=\"contactDeleteBtn\"\r\n                  type=\"button\"\r\n                  onClick={() => deleteContactOperation(contact.id)}\r\n                >\r\n                  <svg className=\"icon-user\">\r\n                    <use href={sprite + \"#icon-bin\"} />\r\n                  </svg>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {/* <ul>\r\n        {contacts.map((contact) => (\r\n          <li key={contact.id}>\r\n            {contact.name}: {contact.number}\r\n            <button\r\n              className=\"contactBtn\"\r\n              type=\"button\"\r\n              onClick={() => deleteContactOperation(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul> */}\r\n    </ContactsListStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    //в state передаем сразу отфильтрованные массив номеров, по актуальному значению поля filtr\r\n    contacts: getFilteredContacts(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteContactOperation })(\r\n  ContactsList\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionStyled = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .sectionTitle {\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-size: 22px;\r\n    font-weight: 700;\r\n    margin: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SectionStyled } from \"./SectionStyled\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"sectionTitle\">{title}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactPageContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: flex-start;\r\n`;\r\n","import React from \"react\";\r\nimport Filter from \"../components/filter/Filter\";\r\nimport ContactsForm from \"../components/contactsForm/ContactsForm\";\r\nimport ContactsList from \"../components/contactsList/ContactsList\";\r\nimport Section from \"../components/Section\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { ContactPageContainer } from \"./ContactPageStyled\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLoading } from \"../redux/contacts/contactsSelectors\";\r\n\r\nconst ContactPage = ({ isLoading }) => {\r\n  return (\r\n    <ContactPageContainer>\r\n      {isLoading && (\r\n        <div className=\"loader\">\r\n          <Loader type=\"ThreeDots\" color=\"darkblue\" height={80} width={80} />\r\n        </div>\r\n      )}\r\n      <Section title={\"Add new contact\"}>\r\n        <ContactsForm />\r\n      </Section>\r\n      <Section title={\"List of contacts\"}>\r\n        <Filter />\r\n        <ContactsList />\r\n      </Section>\r\n    </ContactPageContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: getLoading(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactPage);\r\n","export default __webpack_public_path__ + \"static/media/project_sprites.399ae2ea.svg\";"],"sourceRoot":""}